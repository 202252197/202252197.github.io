{"total":4,"pageSize":12,"pageCount":1,"data":[{"title":"JAVA反射","uid":"0debcd256996db7c9a3f68ed4dfb6299","slug":"java反射","date":"2023-04-04T06:58:11.672Z","updated":"2023-04-04T07:01:27.506Z","comments":true,"path":"api/articles/java反射.json","cover":[],"text":"JAVA反射反射的常见作用 1.动态加载类,动态获取类的信息(属性,方法,构造器) 2.动态构造对象 3.动态调用和外处理属性 4.获取泛型信息 5.处理注解 Class类的对象如何获取？1.运用getClass() 2.运用Class.forName()(最常被使用) 3.运用...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[],"tags":[],"author":{"name":"吕世昊","slug":"blog-author","avatar":"https://i.328888.xyz/2023/04/04/ijVJyU.png","link":"/","description":"风华是一指流砂，苍老是一段年华","socials":{"github":"https://github.com/202252197","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31611529","juejin":"","customs":{}}},"feature":true},{"title":"Java7新特性","uid":"2d1512c57b77604216ac9cf1270a8ecb","slug":"Java7新特性","date":"2023-04-04T06:57:12.756Z","updated":"2023-04-04T06:59:48.006Z","comments":true,"path":"api/articles/Java7新特性.json","cover":null,"text":"二进制字面量jdk7开始,终于可以用二进制来表示整数(byte,short,int和long)。 使用二进制字面量的好处是,可以使代码更容易被理解。语法非常简单, 只要在二进制数值前面加0b或0B 举例：int x&#x3D;0B110110; 数字字面量可以出现下划线为了增强对...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"吕世昊","slug":"blog-author","avatar":"https://i.328888.xyz/2023/04/04/ijVJyU.png","link":"/","description":"风华是一指流砂，苍老是一段年华","socials":{"github":"https://github.com/202252197","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31611529","juejin":"","customs":{}}},"feature":true},{"title":"Java8新特性","uid":"fb58890547580a34de2bb6837aa1cfff","slug":"java8新特性","date":"2023-04-04T06:57:12.703Z","updated":"2023-04-04T06:59:36.678Z","comments":true,"path":"api/articles/java8新特性.json","cover":null,"text":"为何需要Lambda表达式1.在Java中,我们无法将函数作为参数传递给一个方法,也无法声明返回一个函数的方法 2.在JavaScript中,函数参数是一个函数,返回值是另一个函数的情况是非常常见的; JavaScript是一门非常典型的函数式语言 何为Lambada表达式Lam...","link":"","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[],"tags":[],"author":{"name":"吕世昊","slug":"blog-author","avatar":"https://i.328888.xyz/2023/04/04/ijVJyU.png","link":"/","description":"风华是一指流砂，苍老是一段年华","socials":{"github":"https://github.com/202252197","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31611529","juejin":"","customs":{}}},"feature":true},{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2023-04-04T04:40:14.036Z","updated":"2023-04-04T04:28:19.150Z","comments":true,"path":"api/articles/hello-world.json","cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":430,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"吕世昊","slug":"blog-author","avatar":"https://i.328888.xyz/2023/04/04/ijVJyU.png","link":"/","description":"风华是一指流砂，苍老是一段年华","socials":{"github":"https://github.com/202252197","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_31611529","juejin":"","customs":{}}}}]}